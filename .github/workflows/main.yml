name: ADLC3
on: 
  push:
    # tags:
    #   - ^v\d+\.\d+$
  workflow_dispatch:
  
jobs:
  my-job:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, '#NORUN')"
    
    permissions:
      contents: read
      packages: write
      id-token: write
      
    steps:
      - name: Set exit code 1 and terminate workflow
        if: ${{ ! startsWith(github.event.head_commit.message, '#NORUN') }}
        run: |
          exit 1
          
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        id: scan
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL'

      - name: Check for Vulnerabilities
        id: check-vulnerabilities
        run: |
         vulnerabilities_found=$(cat trivy-results.txt | wc -l)
         if [[ $vulnerabilities_found -gt 0 ]]; then
          echo "Vulnerabilities found."
          echo "VULNERABILITIES_FOUND=true" >> $GITHUB_ENV
         else
          echo "No vulnerabilities found."
          echo "VULNERABILITIES_FOUND=false" >> $GITHUB_ENV
         fi
        shell: bash

      - name: Slack Fail Notification
        if: ${{ env.VULNERABILITIES_FOUND == 'true' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: test-submission
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Trivy scan failed. See uploaded report'
          SLACK_TITLE: Scan failed
          SLACK_USERNAME: ${{ github.actor }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Upload report to slack
        if: ${{ env.VULNERABILITIES_FOUND == 'true' }}
        uses: adrey/slack-file-upload-action@master
        with:
          token: ${{ secrets.SLACK_TOKEN }}
          path: trivy-results.txt
          channel: test-submission
          
      # Docker Build and Push
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        
      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: priyadharshinimuthamil/fortune
          tags: type=sha,format=long
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push container images
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Sign the images with GitHub OIDC Token
        if: ${{ env.VULNERABILITIES_FOUND == 'false' }}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: cosign sign --yes "${TAGS}@${DIGEST}"

      - name: Slack Success Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ env.VULNERABILITIES_FOUND == 'false' }}
        env:
          SLACK_CHANNEL: test-submission
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: |
            Name: ${{ github.actor }}
            Matriculation number: A0285977B
            Email: e1221789@u.nus.edu
            Repository: "https://github.com/${{ github.repository }}"
            Docker Hub URL: https://hub.docker.com/r/priyadharshinimuthamil/fortune
          SLACK_TITLE: Information
          SLACK_USERNAME: ${{ github.actor }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          
